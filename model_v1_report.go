/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1Report struct for V1Report
type V1Report struct {
	AmountPercent *int32 `json:"amountPercent,omitempty"`
	Interval *DurationpbDuration `json:"interval,omitempty"`
}

// NewV1Report instantiates a new V1Report object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Report() *V1Report {
	this := V1Report{}
	return &this
}

// NewV1ReportWithDefaults instantiates a new V1Report object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ReportWithDefaults() *V1Report {
	this := V1Report{}
	return &this
}

// GetAmountPercent returns the AmountPercent field value if set, zero value otherwise.
func (o *V1Report) GetAmountPercent() int32 {
	if o == nil || o.AmountPercent == nil {
		var ret int32
		return ret
	}
	return *o.AmountPercent
}

// GetAmountPercentOk returns a tuple with the AmountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Report) GetAmountPercentOk() (*int32, bool) {
	if o == nil || o.AmountPercent == nil {
		return nil, false
	}
	return o.AmountPercent, true
}

// HasAmountPercent returns a boolean if a field has been set.
func (o *V1Report) HasAmountPercent() bool {
	if o != nil && o.AmountPercent != nil {
		return true
	}

	return false
}

// SetAmountPercent gets a reference to the given int32 and assigns it to the AmountPercent field.
func (o *V1Report) SetAmountPercent(v int32) {
	o.AmountPercent = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *V1Report) GetInterval() DurationpbDuration {
	if o == nil || o.Interval == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Report) GetIntervalOk() (*DurationpbDuration, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *V1Report) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given DurationpbDuration and assigns it to the Interval field.
func (o *V1Report) SetInterval(v DurationpbDuration) {
	o.Interval = &v
}

func (o V1Report) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AmountPercent != nil {
		toSerialize["amountPercent"] = o.AmountPercent
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	return json.Marshal(toSerialize)
}

type NullableV1Report struct {
	value *V1Report
	isSet bool
}

func (v NullableV1Report) Get() *V1Report {
	return v.value
}

func (v *NullableV1Report) Set(val *V1Report) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Report) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Report) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Report(val *V1Report) *NullableV1Report {
	return &NullableV1Report{value: val, isSet: true}
}

func (v NullableV1Report) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Report) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


