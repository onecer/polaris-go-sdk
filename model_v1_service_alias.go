/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ServiceAlias struct for V1ServiceAlias
type V1ServiceAlias struct {
	Alias *string `json:"alias,omitempty"`
	AliasNamespace *string `json:"alias_namespace,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Ctime *string `json:"ctime,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	Id *string `json:"id,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Owners *string `json:"owners,omitempty"`
	Service *string `json:"service,omitempty"`
	ServiceToken *string `json:"service_token,omitempty"`
	Type *int32 `json:"type,omitempty"`
}

// NewV1ServiceAlias instantiates a new V1ServiceAlias object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ServiceAlias() *V1ServiceAlias {
	this := V1ServiceAlias{}
	return &this
}

// NewV1ServiceAliasWithDefaults instantiates a new V1ServiceAlias object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ServiceAliasWithDefaults() *V1ServiceAlias {
	this := V1ServiceAlias{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *V1ServiceAlias) SetAlias(v string) {
	o.Alias = &v
}

// GetAliasNamespace returns the AliasNamespace field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetAliasNamespace() string {
	if o == nil || o.AliasNamespace == nil {
		var ret string
		return ret
	}
	return *o.AliasNamespace
}

// GetAliasNamespaceOk returns a tuple with the AliasNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetAliasNamespaceOk() (*string, bool) {
	if o == nil || o.AliasNamespace == nil {
		return nil, false
	}
	return o.AliasNamespace, true
}

// HasAliasNamespace returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasAliasNamespace() bool {
	if o != nil && o.AliasNamespace != nil {
		return true
	}

	return false
}

// SetAliasNamespace gets a reference to the given string and assigns it to the AliasNamespace field.
func (o *V1ServiceAlias) SetAliasNamespace(v string) {
	o.AliasNamespace = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V1ServiceAlias) SetComment(v string) {
	o.Comment = &v
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetCtime() string {
	if o == nil || o.Ctime == nil {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetCtimeOk() (*string, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *V1ServiceAlias) SetCtime(v string) {
	o.Ctime = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetEditable() bool {
	if o == nil || o.Editable == nil {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetEditableOk() (*bool, bool) {
	if o == nil || o.Editable == nil {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasEditable() bool {
	if o != nil && o.Editable != nil {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *V1ServiceAlias) SetEditable(v bool) {
	o.Editable = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1ServiceAlias) SetId(v string) {
	o.Id = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *V1ServiceAlias) SetMtime(v string) {
	o.Mtime = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1ServiceAlias) SetNamespace(v string) {
	o.Namespace = &v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetOwners() string {
	if o == nil || o.Owners == nil {
		var ret string
		return ret
	}
	return *o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetOwnersOk() (*string, bool) {
	if o == nil || o.Owners == nil {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasOwners() bool {
	if o != nil && o.Owners != nil {
		return true
	}

	return false
}

// SetOwners gets a reference to the given string and assigns it to the Owners field.
func (o *V1ServiceAlias) SetOwners(v string) {
	o.Owners = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *V1ServiceAlias) SetService(v string) {
	o.Service = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetServiceToken() string {
	if o == nil || o.ServiceToken == nil {
		var ret string
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetServiceTokenOk() (*string, bool) {
	if o == nil || o.ServiceToken == nil {
		return nil, false
	}
	return o.ServiceToken, true
}

// HasServiceToken returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasServiceToken() bool {
	if o != nil && o.ServiceToken != nil {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given string and assigns it to the ServiceToken field.
func (o *V1ServiceAlias) SetServiceToken(v string) {
	o.ServiceToken = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1ServiceAlias) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAlias) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1ServiceAlias) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *V1ServiceAlias) SetType(v int32) {
	o.Type = &v
}

func (o V1ServiceAlias) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if o.AliasNamespace != nil {
		toSerialize["alias_namespace"] = o.AliasNamespace
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.Editable != nil {
		toSerialize["editable"] = o.Editable
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Owners != nil {
		toSerialize["owners"] = o.Owners
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.ServiceToken != nil {
		toSerialize["service_token"] = o.ServiceToken
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableV1ServiceAlias struct {
	value *V1ServiceAlias
	isSet bool
}

func (v NullableV1ServiceAlias) Get() *V1ServiceAlias {
	return v.value
}

func (v *NullableV1ServiceAlias) Set(val *V1ServiceAlias) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ServiceAlias) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ServiceAlias) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ServiceAlias(val *V1ServiceAlias) *NullableV1ServiceAlias {
	return &NullableV1ServiceAlias{value: val, isSet: true}
}

func (v NullableV1ServiceAlias) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ServiceAlias) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


