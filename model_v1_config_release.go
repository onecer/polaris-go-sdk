/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ConfigRelease struct for V1ConfigRelease
type V1ConfigRelease struct {
	CircuitBreaker *V1CircuitBreaker `json:"circuitBreaker,omitempty"`
	Ctime *string `json:"ctime,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Service *V1Service `json:"service,omitempty"`
}

// NewV1ConfigRelease instantiates a new V1ConfigRelease object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ConfigRelease() *V1ConfigRelease {
	this := V1ConfigRelease{}
	return &this
}

// NewV1ConfigReleaseWithDefaults instantiates a new V1ConfigRelease object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ConfigReleaseWithDefaults() *V1ConfigRelease {
	this := V1ConfigRelease{}
	return &this
}

// GetCircuitBreaker returns the CircuitBreaker field value if set, zero value otherwise.
func (o *V1ConfigRelease) GetCircuitBreaker() V1CircuitBreaker {
	if o == nil || o.CircuitBreaker == nil {
		var ret V1CircuitBreaker
		return ret
	}
	return *o.CircuitBreaker
}

// GetCircuitBreakerOk returns a tuple with the CircuitBreaker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigRelease) GetCircuitBreakerOk() (*V1CircuitBreaker, bool) {
	if o == nil || o.CircuitBreaker == nil {
		return nil, false
	}
	return o.CircuitBreaker, true
}

// HasCircuitBreaker returns a boolean if a field has been set.
func (o *V1ConfigRelease) HasCircuitBreaker() bool {
	if o != nil && o.CircuitBreaker != nil {
		return true
	}

	return false
}

// SetCircuitBreaker gets a reference to the given V1CircuitBreaker and assigns it to the CircuitBreaker field.
func (o *V1ConfigRelease) SetCircuitBreaker(v V1CircuitBreaker) {
	o.CircuitBreaker = &v
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *V1ConfigRelease) GetCtime() string {
	if o == nil || o.Ctime == nil {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigRelease) GetCtimeOk() (*string, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *V1ConfigRelease) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *V1ConfigRelease) SetCtime(v string) {
	o.Ctime = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *V1ConfigRelease) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigRelease) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *V1ConfigRelease) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *V1ConfigRelease) SetMtime(v string) {
	o.Mtime = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *V1ConfigRelease) GetService() V1Service {
	if o == nil || o.Service == nil {
		var ret V1Service
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigRelease) GetServiceOk() (*V1Service, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *V1ConfigRelease) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given V1Service and assigns it to the Service field.
func (o *V1ConfigRelease) SetService(v V1Service) {
	o.Service = &v
}

func (o V1ConfigRelease) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CircuitBreaker != nil {
		toSerialize["circuitBreaker"] = o.CircuitBreaker
	}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	return json.Marshal(toSerialize)
}

type NullableV1ConfigRelease struct {
	value *V1ConfigRelease
	isSet bool
}

func (v NullableV1ConfigRelease) Get() *V1ConfigRelease {
	return v.value
}

func (v *NullableV1ConfigRelease) Set(val *V1ConfigRelease) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ConfigRelease) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ConfigRelease) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ConfigRelease(val *V1ConfigRelease) *NullableV1ConfigRelease {
	return &NullableV1ConfigRelease{value: val, isSet: true}
}

func (v NullableV1ConfigRelease) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ConfigRelease) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


