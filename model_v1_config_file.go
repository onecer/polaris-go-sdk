/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ConfigFile struct for V1ConfigFile
type V1ConfigFile struct {
	Comment *string `json:"comment,omitempty"`
	Content *string `json:"content,omitempty"`
	CreateBy *string `json:"create_by,omitempty"`
	CreateTime *string `json:"create_time,omitempty"`
	Format *string `json:"format,omitempty"`
	Group *string `json:"group,omitempty"`
	Id *int32 `json:"id,omitempty"`
	ModifyBy *string `json:"modify_by,omitempty"`
	ModifyTime *string `json:"modify_time,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	ReleaseBy *string `json:"release_by,omitempty"`
	ReleaseTime *string `json:"release_time,omitempty"`
	Status *string `json:"status,omitempty"`
	Tags *[]V1ConfigFileTag `json:"tags,omitempty"`
}

// NewV1ConfigFile instantiates a new V1ConfigFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ConfigFile() *V1ConfigFile {
	this := V1ConfigFile{}
	return &this
}

// NewV1ConfigFileWithDefaults instantiates a new V1ConfigFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ConfigFileWithDefaults() *V1ConfigFile {
	this := V1ConfigFile{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V1ConfigFile) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V1ConfigFile) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V1ConfigFile) SetComment(v string) {
	o.Comment = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *V1ConfigFile) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *V1ConfigFile) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *V1ConfigFile) SetContent(v string) {
	o.Content = &v
}

// GetCreateBy returns the CreateBy field value if set, zero value otherwise.
func (o *V1ConfigFile) GetCreateBy() string {
	if o == nil || o.CreateBy == nil {
		var ret string
		return ret
	}
	return *o.CreateBy
}

// GetCreateByOk returns a tuple with the CreateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetCreateByOk() (*string, bool) {
	if o == nil || o.CreateBy == nil {
		return nil, false
	}
	return o.CreateBy, true
}

// HasCreateBy returns a boolean if a field has been set.
func (o *V1ConfigFile) HasCreateBy() bool {
	if o != nil && o.CreateBy != nil {
		return true
	}

	return false
}

// SetCreateBy gets a reference to the given string and assigns it to the CreateBy field.
func (o *V1ConfigFile) SetCreateBy(v string) {
	o.CreateBy = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *V1ConfigFile) GetCreateTime() string {
	if o == nil || o.CreateTime == nil {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetCreateTimeOk() (*string, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *V1ConfigFile) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *V1ConfigFile) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *V1ConfigFile) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *V1ConfigFile) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *V1ConfigFile) SetFormat(v string) {
	o.Format = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *V1ConfigFile) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *V1ConfigFile) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *V1ConfigFile) SetGroup(v string) {
	o.Group = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1ConfigFile) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1ConfigFile) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *V1ConfigFile) SetId(v int32) {
	o.Id = &v
}

// GetModifyBy returns the ModifyBy field value if set, zero value otherwise.
func (o *V1ConfigFile) GetModifyBy() string {
	if o == nil || o.ModifyBy == nil {
		var ret string
		return ret
	}
	return *o.ModifyBy
}

// GetModifyByOk returns a tuple with the ModifyBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetModifyByOk() (*string, bool) {
	if o == nil || o.ModifyBy == nil {
		return nil, false
	}
	return o.ModifyBy, true
}

// HasModifyBy returns a boolean if a field has been set.
func (o *V1ConfigFile) HasModifyBy() bool {
	if o != nil && o.ModifyBy != nil {
		return true
	}

	return false
}

// SetModifyBy gets a reference to the given string and assigns it to the ModifyBy field.
func (o *V1ConfigFile) SetModifyBy(v string) {
	o.ModifyBy = &v
}

// GetModifyTime returns the ModifyTime field value if set, zero value otherwise.
func (o *V1ConfigFile) GetModifyTime() string {
	if o == nil || o.ModifyTime == nil {
		var ret string
		return ret
	}
	return *o.ModifyTime
}

// GetModifyTimeOk returns a tuple with the ModifyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetModifyTimeOk() (*string, bool) {
	if o == nil || o.ModifyTime == nil {
		return nil, false
	}
	return o.ModifyTime, true
}

// HasModifyTime returns a boolean if a field has been set.
func (o *V1ConfigFile) HasModifyTime() bool {
	if o != nil && o.ModifyTime != nil {
		return true
	}

	return false
}

// SetModifyTime gets a reference to the given string and assigns it to the ModifyTime field.
func (o *V1ConfigFile) SetModifyTime(v string) {
	o.ModifyTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1ConfigFile) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1ConfigFile) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1ConfigFile) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1ConfigFile) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1ConfigFile) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1ConfigFile) SetNamespace(v string) {
	o.Namespace = &v
}

// GetReleaseBy returns the ReleaseBy field value if set, zero value otherwise.
func (o *V1ConfigFile) GetReleaseBy() string {
	if o == nil || o.ReleaseBy == nil {
		var ret string
		return ret
	}
	return *o.ReleaseBy
}

// GetReleaseByOk returns a tuple with the ReleaseBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetReleaseByOk() (*string, bool) {
	if o == nil || o.ReleaseBy == nil {
		return nil, false
	}
	return o.ReleaseBy, true
}

// HasReleaseBy returns a boolean if a field has been set.
func (o *V1ConfigFile) HasReleaseBy() bool {
	if o != nil && o.ReleaseBy != nil {
		return true
	}

	return false
}

// SetReleaseBy gets a reference to the given string and assigns it to the ReleaseBy field.
func (o *V1ConfigFile) SetReleaseBy(v string) {
	o.ReleaseBy = &v
}

// GetReleaseTime returns the ReleaseTime field value if set, zero value otherwise.
func (o *V1ConfigFile) GetReleaseTime() string {
	if o == nil || o.ReleaseTime == nil {
		var ret string
		return ret
	}
	return *o.ReleaseTime
}

// GetReleaseTimeOk returns a tuple with the ReleaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetReleaseTimeOk() (*string, bool) {
	if o == nil || o.ReleaseTime == nil {
		return nil, false
	}
	return o.ReleaseTime, true
}

// HasReleaseTime returns a boolean if a field has been set.
func (o *V1ConfigFile) HasReleaseTime() bool {
	if o != nil && o.ReleaseTime != nil {
		return true
	}

	return false
}

// SetReleaseTime gets a reference to the given string and assigns it to the ReleaseTime field.
func (o *V1ConfigFile) SetReleaseTime(v string) {
	o.ReleaseTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1ConfigFile) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1ConfigFile) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1ConfigFile) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *V1ConfigFile) GetTags() []V1ConfigFileTag {
	if o == nil || o.Tags == nil {
		var ret []V1ConfigFileTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ConfigFile) GetTagsOk() (*[]V1ConfigFileTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *V1ConfigFile) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []V1ConfigFileTag and assigns it to the Tags field.
func (o *V1ConfigFile) SetTags(v []V1ConfigFileTag) {
	o.Tags = &v
}

func (o V1ConfigFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.CreateBy != nil {
		toSerialize["create_by"] = o.CreateBy
	}
	if o.CreateTime != nil {
		toSerialize["create_time"] = o.CreateTime
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ModifyBy != nil {
		toSerialize["modify_by"] = o.ModifyBy
	}
	if o.ModifyTime != nil {
		toSerialize["modify_time"] = o.ModifyTime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.ReleaseBy != nil {
		toSerialize["release_by"] = o.ReleaseBy
	}
	if o.ReleaseTime != nil {
		toSerialize["release_time"] = o.ReleaseTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableV1ConfigFile struct {
	value *V1ConfigFile
	isSet bool
}

func (v NullableV1ConfigFile) Get() *V1ConfigFile {
	return v.value
}

func (v *NullableV1ConfigFile) Set(val *V1ConfigFile) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ConfigFile) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ConfigFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ConfigFile(val *V1ConfigFile) *NullableV1ConfigFile {
	return &NullableV1ConfigFile{value: val, isSet: true}
}

func (v NullableV1ConfigFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ConfigFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


