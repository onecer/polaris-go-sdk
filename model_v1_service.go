/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1Service struct for V1Service
type V1Service struct {
	Business *string `json:"business,omitempty"`
	CmdbMod1 *string `json:"cmdb_mod1,omitempty"`
	CmdbMod2 *string `json:"cmdb_mod2,omitempty"`
	CmdbMod3 *string `json:"cmdb_mod3,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Ctime *string `json:"ctime,omitempty"`
	Department *string `json:"department,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	GroupIds *[]string `json:"group_ids,omitempty"`
	HealthyInstanceCount *int32 `json:"healthy_instance_count,omitempty"`
	Id *string `json:"id,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Owners *string `json:"owners,omitempty"`
	PlatformId *string `json:"platform_id,omitempty"`
	Ports *string `json:"ports,omitempty"`
	RemoveGroupIds *[]string `json:"remove_group_ids,omitempty"`
	RemoveUserIds *[]string `json:"remove_user_ids,omitempty"`
	Revision *string `json:"revision,omitempty"`
	Token *string `json:"token,omitempty"`
	TotalInstanceCount *int32 `json:"total_instance_count,omitempty"`
	UserIds *[]string `json:"user_ids,omitempty"`
}

// NewV1Service instantiates a new V1Service object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Service() *V1Service {
	this := V1Service{}
	return &this
}

// NewV1ServiceWithDefaults instantiates a new V1Service object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ServiceWithDefaults() *V1Service {
	this := V1Service{}
	return &this
}

// GetBusiness returns the Business field value if set, zero value otherwise.
func (o *V1Service) GetBusiness() string {
	if o == nil || o.Business == nil {
		var ret string
		return ret
	}
	return *o.Business
}

// GetBusinessOk returns a tuple with the Business field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetBusinessOk() (*string, bool) {
	if o == nil || o.Business == nil {
		return nil, false
	}
	return o.Business, true
}

// HasBusiness returns a boolean if a field has been set.
func (o *V1Service) HasBusiness() bool {
	if o != nil && o.Business != nil {
		return true
	}

	return false
}

// SetBusiness gets a reference to the given string and assigns it to the Business field.
func (o *V1Service) SetBusiness(v string) {
	o.Business = &v
}

// GetCmdbMod1 returns the CmdbMod1 field value if set, zero value otherwise.
func (o *V1Service) GetCmdbMod1() string {
	if o == nil || o.CmdbMod1 == nil {
		var ret string
		return ret
	}
	return *o.CmdbMod1
}

// GetCmdbMod1Ok returns a tuple with the CmdbMod1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetCmdbMod1Ok() (*string, bool) {
	if o == nil || o.CmdbMod1 == nil {
		return nil, false
	}
	return o.CmdbMod1, true
}

// HasCmdbMod1 returns a boolean if a field has been set.
func (o *V1Service) HasCmdbMod1() bool {
	if o != nil && o.CmdbMod1 != nil {
		return true
	}

	return false
}

// SetCmdbMod1 gets a reference to the given string and assigns it to the CmdbMod1 field.
func (o *V1Service) SetCmdbMod1(v string) {
	o.CmdbMod1 = &v
}

// GetCmdbMod2 returns the CmdbMod2 field value if set, zero value otherwise.
func (o *V1Service) GetCmdbMod2() string {
	if o == nil || o.CmdbMod2 == nil {
		var ret string
		return ret
	}
	return *o.CmdbMod2
}

// GetCmdbMod2Ok returns a tuple with the CmdbMod2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetCmdbMod2Ok() (*string, bool) {
	if o == nil || o.CmdbMod2 == nil {
		return nil, false
	}
	return o.CmdbMod2, true
}

// HasCmdbMod2 returns a boolean if a field has been set.
func (o *V1Service) HasCmdbMod2() bool {
	if o != nil && o.CmdbMod2 != nil {
		return true
	}

	return false
}

// SetCmdbMod2 gets a reference to the given string and assigns it to the CmdbMod2 field.
func (o *V1Service) SetCmdbMod2(v string) {
	o.CmdbMod2 = &v
}

// GetCmdbMod3 returns the CmdbMod3 field value if set, zero value otherwise.
func (o *V1Service) GetCmdbMod3() string {
	if o == nil || o.CmdbMod3 == nil {
		var ret string
		return ret
	}
	return *o.CmdbMod3
}

// GetCmdbMod3Ok returns a tuple with the CmdbMod3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetCmdbMod3Ok() (*string, bool) {
	if o == nil || o.CmdbMod3 == nil {
		return nil, false
	}
	return o.CmdbMod3, true
}

// HasCmdbMod3 returns a boolean if a field has been set.
func (o *V1Service) HasCmdbMod3() bool {
	if o != nil && o.CmdbMod3 != nil {
		return true
	}

	return false
}

// SetCmdbMod3 gets a reference to the given string and assigns it to the CmdbMod3 field.
func (o *V1Service) SetCmdbMod3(v string) {
	o.CmdbMod3 = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V1Service) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V1Service) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V1Service) SetComment(v string) {
	o.Comment = &v
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *V1Service) GetCtime() string {
	if o == nil || o.Ctime == nil {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetCtimeOk() (*string, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *V1Service) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *V1Service) SetCtime(v string) {
	o.Ctime = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *V1Service) GetDepartment() string {
	if o == nil || o.Department == nil {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetDepartmentOk() (*string, bool) {
	if o == nil || o.Department == nil {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *V1Service) HasDepartment() bool {
	if o != nil && o.Department != nil {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *V1Service) SetDepartment(v string) {
	o.Department = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *V1Service) GetEditable() bool {
	if o == nil || o.Editable == nil {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetEditableOk() (*bool, bool) {
	if o == nil || o.Editable == nil {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *V1Service) HasEditable() bool {
	if o != nil && o.Editable != nil {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *V1Service) SetEditable(v bool) {
	o.Editable = &v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *V1Service) GetGroupIds() []string {
	if o == nil || o.GroupIds == nil {
		var ret []string
		return ret
	}
	return *o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetGroupIdsOk() (*[]string, bool) {
	if o == nil || o.GroupIds == nil {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *V1Service) HasGroupIds() bool {
	if o != nil && o.GroupIds != nil {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *V1Service) SetGroupIds(v []string) {
	o.GroupIds = &v
}

// GetHealthyInstanceCount returns the HealthyInstanceCount field value if set, zero value otherwise.
func (o *V1Service) GetHealthyInstanceCount() int32 {
	if o == nil || o.HealthyInstanceCount == nil {
		var ret int32
		return ret
	}
	return *o.HealthyInstanceCount
}

// GetHealthyInstanceCountOk returns a tuple with the HealthyInstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetHealthyInstanceCountOk() (*int32, bool) {
	if o == nil || o.HealthyInstanceCount == nil {
		return nil, false
	}
	return o.HealthyInstanceCount, true
}

// HasHealthyInstanceCount returns a boolean if a field has been set.
func (o *V1Service) HasHealthyInstanceCount() bool {
	if o != nil && o.HealthyInstanceCount != nil {
		return true
	}

	return false
}

// SetHealthyInstanceCount gets a reference to the given int32 and assigns it to the HealthyInstanceCount field.
func (o *V1Service) SetHealthyInstanceCount(v int32) {
	o.HealthyInstanceCount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1Service) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1Service) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1Service) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1Service) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1Service) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *V1Service) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *V1Service) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *V1Service) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *V1Service) SetMtime(v string) {
	o.Mtime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1Service) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1Service) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1Service) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1Service) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1Service) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1Service) SetNamespace(v string) {
	o.Namespace = &v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *V1Service) GetOwners() string {
	if o == nil || o.Owners == nil {
		var ret string
		return ret
	}
	return *o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetOwnersOk() (*string, bool) {
	if o == nil || o.Owners == nil {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *V1Service) HasOwners() bool {
	if o != nil && o.Owners != nil {
		return true
	}

	return false
}

// SetOwners gets a reference to the given string and assigns it to the Owners field.
func (o *V1Service) SetOwners(v string) {
	o.Owners = &v
}

// GetPlatformId returns the PlatformId field value if set, zero value otherwise.
func (o *V1Service) GetPlatformId() string {
	if o == nil || o.PlatformId == nil {
		var ret string
		return ret
	}
	return *o.PlatformId
}

// GetPlatformIdOk returns a tuple with the PlatformId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetPlatformIdOk() (*string, bool) {
	if o == nil || o.PlatformId == nil {
		return nil, false
	}
	return o.PlatformId, true
}

// HasPlatformId returns a boolean if a field has been set.
func (o *V1Service) HasPlatformId() bool {
	if o != nil && o.PlatformId != nil {
		return true
	}

	return false
}

// SetPlatformId gets a reference to the given string and assigns it to the PlatformId field.
func (o *V1Service) SetPlatformId(v string) {
	o.PlatformId = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *V1Service) GetPorts() string {
	if o == nil || o.Ports == nil {
		var ret string
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetPortsOk() (*string, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *V1Service) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given string and assigns it to the Ports field.
func (o *V1Service) SetPorts(v string) {
	o.Ports = &v
}

// GetRemoveGroupIds returns the RemoveGroupIds field value if set, zero value otherwise.
func (o *V1Service) GetRemoveGroupIds() []string {
	if o == nil || o.RemoveGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.RemoveGroupIds
}

// GetRemoveGroupIdsOk returns a tuple with the RemoveGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetRemoveGroupIdsOk() (*[]string, bool) {
	if o == nil || o.RemoveGroupIds == nil {
		return nil, false
	}
	return o.RemoveGroupIds, true
}

// HasRemoveGroupIds returns a boolean if a field has been set.
func (o *V1Service) HasRemoveGroupIds() bool {
	if o != nil && o.RemoveGroupIds != nil {
		return true
	}

	return false
}

// SetRemoveGroupIds gets a reference to the given []string and assigns it to the RemoveGroupIds field.
func (o *V1Service) SetRemoveGroupIds(v []string) {
	o.RemoveGroupIds = &v
}

// GetRemoveUserIds returns the RemoveUserIds field value if set, zero value otherwise.
func (o *V1Service) GetRemoveUserIds() []string {
	if o == nil || o.RemoveUserIds == nil {
		var ret []string
		return ret
	}
	return *o.RemoveUserIds
}

// GetRemoveUserIdsOk returns a tuple with the RemoveUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetRemoveUserIdsOk() (*[]string, bool) {
	if o == nil || o.RemoveUserIds == nil {
		return nil, false
	}
	return o.RemoveUserIds, true
}

// HasRemoveUserIds returns a boolean if a field has been set.
func (o *V1Service) HasRemoveUserIds() bool {
	if o != nil && o.RemoveUserIds != nil {
		return true
	}

	return false
}

// SetRemoveUserIds gets a reference to the given []string and assigns it to the RemoveUserIds field.
func (o *V1Service) SetRemoveUserIds(v []string) {
	o.RemoveUserIds = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1Service) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1Service) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *V1Service) SetRevision(v string) {
	o.Revision = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *V1Service) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *V1Service) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *V1Service) SetToken(v string) {
	o.Token = &v
}

// GetTotalInstanceCount returns the TotalInstanceCount field value if set, zero value otherwise.
func (o *V1Service) GetTotalInstanceCount() int32 {
	if o == nil || o.TotalInstanceCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalInstanceCount
}

// GetTotalInstanceCountOk returns a tuple with the TotalInstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetTotalInstanceCountOk() (*int32, bool) {
	if o == nil || o.TotalInstanceCount == nil {
		return nil, false
	}
	return o.TotalInstanceCount, true
}

// HasTotalInstanceCount returns a boolean if a field has been set.
func (o *V1Service) HasTotalInstanceCount() bool {
	if o != nil && o.TotalInstanceCount != nil {
		return true
	}

	return false
}

// SetTotalInstanceCount gets a reference to the given int32 and assigns it to the TotalInstanceCount field.
func (o *V1Service) SetTotalInstanceCount(v int32) {
	o.TotalInstanceCount = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *V1Service) GetUserIds() []string {
	if o == nil || o.UserIds == nil {
		var ret []string
		return ret
	}
	return *o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Service) GetUserIdsOk() (*[]string, bool) {
	if o == nil || o.UserIds == nil {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *V1Service) HasUserIds() bool {
	if o != nil && o.UserIds != nil {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *V1Service) SetUserIds(v []string) {
	o.UserIds = &v
}

func (o V1Service) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Business != nil {
		toSerialize["business"] = o.Business
	}
	if o.CmdbMod1 != nil {
		toSerialize["cmdb_mod1"] = o.CmdbMod1
	}
	if o.CmdbMod2 != nil {
		toSerialize["cmdb_mod2"] = o.CmdbMod2
	}
	if o.CmdbMod3 != nil {
		toSerialize["cmdb_mod3"] = o.CmdbMod3
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.Department != nil {
		toSerialize["department"] = o.Department
	}
	if o.Editable != nil {
		toSerialize["editable"] = o.Editable
	}
	if o.GroupIds != nil {
		toSerialize["group_ids"] = o.GroupIds
	}
	if o.HealthyInstanceCount != nil {
		toSerialize["healthy_instance_count"] = o.HealthyInstanceCount
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Owners != nil {
		toSerialize["owners"] = o.Owners
	}
	if o.PlatformId != nil {
		toSerialize["platform_id"] = o.PlatformId
	}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if o.RemoveGroupIds != nil {
		toSerialize["remove_group_ids"] = o.RemoveGroupIds
	}
	if o.RemoveUserIds != nil {
		toSerialize["remove_user_ids"] = o.RemoveUserIds
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.TotalInstanceCount != nil {
		toSerialize["total_instance_count"] = o.TotalInstanceCount
	}
	if o.UserIds != nil {
		toSerialize["user_ids"] = o.UserIds
	}
	return json.Marshal(toSerialize)
}

type NullableV1Service struct {
	value *V1Service
	isSet bool
}

func (v NullableV1Service) Get() *V1Service {
	return v.value
}

func (v *NullableV1Service) Set(val *V1Service) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Service) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Service) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Service(val *V1Service) *NullableV1Service {
	return &NullableV1Service{value: val, isSet: true}
}

func (v NullableV1Service) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Service) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


