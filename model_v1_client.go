/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1Client struct for V1Client
type V1Client struct {
	Ctime *string `json:"ctime,omitempty"`
	Host *string `json:"host,omitempty"`
	Id *string `json:"id,omitempty"`
	Location *V1Location `json:"location,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Stat *[]V1StatInfo `json:"stat,omitempty"`
	Type *int32 `json:"type,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewV1Client instantiates a new V1Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Client() *V1Client {
	this := V1Client{}
	return &this
}

// NewV1ClientWithDefaults instantiates a new V1Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ClientWithDefaults() *V1Client {
	this := V1Client{}
	return &this
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *V1Client) GetCtime() string {
	if o == nil || o.Ctime == nil {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetCtimeOk() (*string, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *V1Client) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *V1Client) SetCtime(v string) {
	o.Ctime = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V1Client) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V1Client) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V1Client) SetHost(v string) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1Client) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1Client) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1Client) SetId(v string) {
	o.Id = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *V1Client) GetLocation() V1Location {
	if o == nil || o.Location == nil {
		var ret V1Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetLocationOk() (*V1Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *V1Client) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given V1Location and assigns it to the Location field.
func (o *V1Client) SetLocation(v V1Location) {
	o.Location = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *V1Client) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *V1Client) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *V1Client) SetMtime(v string) {
	o.Mtime = &v
}

// GetStat returns the Stat field value if set, zero value otherwise.
func (o *V1Client) GetStat() []V1StatInfo {
	if o == nil || o.Stat == nil {
		var ret []V1StatInfo
		return ret
	}
	return *o.Stat
}

// GetStatOk returns a tuple with the Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetStatOk() (*[]V1StatInfo, bool) {
	if o == nil || o.Stat == nil {
		return nil, false
	}
	return o.Stat, true
}

// HasStat returns a boolean if a field has been set.
func (o *V1Client) HasStat() bool {
	if o != nil && o.Stat != nil {
		return true
	}

	return false
}

// SetStat gets a reference to the given []V1StatInfo and assigns it to the Stat field.
func (o *V1Client) SetStat(v []V1StatInfo) {
	o.Stat = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1Client) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1Client) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *V1Client) SetType(v int32) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1Client) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Client) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1Client) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V1Client) SetVersion(v string) {
	o.Version = &v
}

func (o V1Client) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Stat != nil {
		toSerialize["stat"] = o.Stat
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableV1Client struct {
	value *V1Client
	isSet bool
}

func (v NullableV1Client) Get() *V1Client {
	return v.value
}

func (v *NullableV1Client) Set(val *V1Client) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Client) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Client) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Client(val *V1Client) *NullableV1Client {
	return &NullableV1Client{value: val, isSet: true}
}

func (v NullableV1Client) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Client) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


