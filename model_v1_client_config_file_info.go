/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ClientConfigFileInfo struct for V1ClientConfigFileInfo
type V1ClientConfigFileInfo struct {
	Content *string `json:"content,omitempty"`
	FileName *string `json:"file_name,omitempty"`
	Group *string `json:"group,omitempty"`
	Md5 *string `json:"md5,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewV1ClientConfigFileInfo instantiates a new V1ClientConfigFileInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ClientConfigFileInfo() *V1ClientConfigFileInfo {
	this := V1ClientConfigFileInfo{}
	return &this
}

// NewV1ClientConfigFileInfoWithDefaults instantiates a new V1ClientConfigFileInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ClientConfigFileInfoWithDefaults() *V1ClientConfigFileInfo {
	this := V1ClientConfigFileInfo{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *V1ClientConfigFileInfo) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClientConfigFileInfo) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *V1ClientConfigFileInfo) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *V1ClientConfigFileInfo) SetContent(v string) {
	o.Content = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *V1ClientConfigFileInfo) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClientConfigFileInfo) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *V1ClientConfigFileInfo) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *V1ClientConfigFileInfo) SetFileName(v string) {
	o.FileName = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *V1ClientConfigFileInfo) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClientConfigFileInfo) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *V1ClientConfigFileInfo) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *V1ClientConfigFileInfo) SetGroup(v string) {
	o.Group = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *V1ClientConfigFileInfo) GetMd5() string {
	if o == nil || o.Md5 == nil {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClientConfigFileInfo) GetMd5Ok() (*string, bool) {
	if o == nil || o.Md5 == nil {
		return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *V1ClientConfigFileInfo) HasMd5() bool {
	if o != nil && o.Md5 != nil {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *V1ClientConfigFileInfo) SetMd5(v string) {
	o.Md5 = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1ClientConfigFileInfo) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClientConfigFileInfo) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1ClientConfigFileInfo) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1ClientConfigFileInfo) SetNamespace(v string) {
	o.Namespace = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1ClientConfigFileInfo) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClientConfigFileInfo) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1ClientConfigFileInfo) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *V1ClientConfigFileInfo) SetVersion(v int32) {
	o.Version = &v
}

func (o V1ClientConfigFileInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.FileName != nil {
		toSerialize["file_name"] = o.FileName
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Md5 != nil {
		toSerialize["md5"] = o.Md5
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableV1ClientConfigFileInfo struct {
	value *V1ClientConfigFileInfo
	isSet bool
}

func (v NullableV1ClientConfigFileInfo) Get() *V1ClientConfigFileInfo {
	return v.value
}

func (v *NullableV1ClientConfigFileInfo) Set(val *V1ClientConfigFileInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ClientConfigFileInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ClientConfigFileInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ClientConfigFileInfo(val *V1ClientConfigFileInfo) *NullableV1ClientConfigFileInfo {
	return &NullableV1ClientConfigFileInfo{value: val, isSet: true}
}

func (v NullableV1ClientConfigFileInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ClientConfigFileInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


