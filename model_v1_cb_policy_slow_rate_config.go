/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1CbPolicySlowRateConfig struct for V1CbPolicySlowRateConfig
type V1CbPolicySlowRateConfig struct {
	Enable *bool `json:"enable,omitempty"`
	MaxRt *DurationpbDuration `json:"maxRt,omitempty"`
	SlowRateToOpen *int32 `json:"slowRateToOpen,omitempty"`
	SlowRateToPreserved *int32 `json:"slowRateToPreserved,omitempty"`
}

// NewV1CbPolicySlowRateConfig instantiates a new V1CbPolicySlowRateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1CbPolicySlowRateConfig() *V1CbPolicySlowRateConfig {
	this := V1CbPolicySlowRateConfig{}
	return &this
}

// NewV1CbPolicySlowRateConfigWithDefaults instantiates a new V1CbPolicySlowRateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1CbPolicySlowRateConfigWithDefaults() *V1CbPolicySlowRateConfig {
	this := V1CbPolicySlowRateConfig{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *V1CbPolicySlowRateConfig) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CbPolicySlowRateConfig) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *V1CbPolicySlowRateConfig) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *V1CbPolicySlowRateConfig) SetEnable(v bool) {
	o.Enable = &v
}

// GetMaxRt returns the MaxRt field value if set, zero value otherwise.
func (o *V1CbPolicySlowRateConfig) GetMaxRt() DurationpbDuration {
	if o == nil || o.MaxRt == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.MaxRt
}

// GetMaxRtOk returns a tuple with the MaxRt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CbPolicySlowRateConfig) GetMaxRtOk() (*DurationpbDuration, bool) {
	if o == nil || o.MaxRt == nil {
		return nil, false
	}
	return o.MaxRt, true
}

// HasMaxRt returns a boolean if a field has been set.
func (o *V1CbPolicySlowRateConfig) HasMaxRt() bool {
	if o != nil && o.MaxRt != nil {
		return true
	}

	return false
}

// SetMaxRt gets a reference to the given DurationpbDuration and assigns it to the MaxRt field.
func (o *V1CbPolicySlowRateConfig) SetMaxRt(v DurationpbDuration) {
	o.MaxRt = &v
}

// GetSlowRateToOpen returns the SlowRateToOpen field value if set, zero value otherwise.
func (o *V1CbPolicySlowRateConfig) GetSlowRateToOpen() int32 {
	if o == nil || o.SlowRateToOpen == nil {
		var ret int32
		return ret
	}
	return *o.SlowRateToOpen
}

// GetSlowRateToOpenOk returns a tuple with the SlowRateToOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CbPolicySlowRateConfig) GetSlowRateToOpenOk() (*int32, bool) {
	if o == nil || o.SlowRateToOpen == nil {
		return nil, false
	}
	return o.SlowRateToOpen, true
}

// HasSlowRateToOpen returns a boolean if a field has been set.
func (o *V1CbPolicySlowRateConfig) HasSlowRateToOpen() bool {
	if o != nil && o.SlowRateToOpen != nil {
		return true
	}

	return false
}

// SetSlowRateToOpen gets a reference to the given int32 and assigns it to the SlowRateToOpen field.
func (o *V1CbPolicySlowRateConfig) SetSlowRateToOpen(v int32) {
	o.SlowRateToOpen = &v
}

// GetSlowRateToPreserved returns the SlowRateToPreserved field value if set, zero value otherwise.
func (o *V1CbPolicySlowRateConfig) GetSlowRateToPreserved() int32 {
	if o == nil || o.SlowRateToPreserved == nil {
		var ret int32
		return ret
	}
	return *o.SlowRateToPreserved
}

// GetSlowRateToPreservedOk returns a tuple with the SlowRateToPreserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CbPolicySlowRateConfig) GetSlowRateToPreservedOk() (*int32, bool) {
	if o == nil || o.SlowRateToPreserved == nil {
		return nil, false
	}
	return o.SlowRateToPreserved, true
}

// HasSlowRateToPreserved returns a boolean if a field has been set.
func (o *V1CbPolicySlowRateConfig) HasSlowRateToPreserved() bool {
	if o != nil && o.SlowRateToPreserved != nil {
		return true
	}

	return false
}

// SetSlowRateToPreserved gets a reference to the given int32 and assigns it to the SlowRateToPreserved field.
func (o *V1CbPolicySlowRateConfig) SetSlowRateToPreserved(v int32) {
	o.SlowRateToPreserved = &v
}

func (o V1CbPolicySlowRateConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	if o.MaxRt != nil {
		toSerialize["maxRt"] = o.MaxRt
	}
	if o.SlowRateToOpen != nil {
		toSerialize["slowRateToOpen"] = o.SlowRateToOpen
	}
	if o.SlowRateToPreserved != nil {
		toSerialize["slowRateToPreserved"] = o.SlowRateToPreserved
	}
	return json.Marshal(toSerialize)
}

type NullableV1CbPolicySlowRateConfig struct {
	value *V1CbPolicySlowRateConfig
	isSet bool
}

func (v NullableV1CbPolicySlowRateConfig) Get() *V1CbPolicySlowRateConfig {
	return v.value
}

func (v *NullableV1CbPolicySlowRateConfig) Set(val *V1CbPolicySlowRateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1CbPolicySlowRateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1CbPolicySlowRateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1CbPolicySlowRateConfig(val *V1CbPolicySlowRateConfig) *NullableV1CbPolicySlowRateConfig {
	return &NullableV1CbPolicySlowRateConfig{value: val, isSet: true}
}

func (v NullableV1CbPolicySlowRateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1CbPolicySlowRateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


