/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1DestinationSet struct for V1DestinationSet
type V1DestinationSet struct {
	ErrorCodes *[]WrapperspbInt64Value `json:"errorCodes,omitempty"`
	Metadata *map[string]V1MatchString `json:"metadata,omitempty"`
	Method *V1MatchString `json:"method,omitempty"`
	MetricPrecision *int32 `json:"metricPrecision,omitempty"`
	MetricWindow *DurationpbDuration `json:"metricWindow,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Policy *V1CbPolicy `json:"policy,omitempty"`
	Recover *V1RecoverConfig `json:"recover,omitempty"`
	Resource *int32 `json:"resource,omitempty"`
	Scope *int32 `json:"scope,omitempty"`
	Service *string `json:"service,omitempty"`
	Type *int32 `json:"type,omitempty"`
	UpdateInterval *DurationpbDuration `json:"updateInterval,omitempty"`
}

// NewV1DestinationSet instantiates a new V1DestinationSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DestinationSet() *V1DestinationSet {
	this := V1DestinationSet{}
	return &this
}

// NewV1DestinationSetWithDefaults instantiates a new V1DestinationSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DestinationSetWithDefaults() *V1DestinationSet {
	this := V1DestinationSet{}
	return &this
}

// GetErrorCodes returns the ErrorCodes field value if set, zero value otherwise.
func (o *V1DestinationSet) GetErrorCodes() []WrapperspbInt64Value {
	if o == nil || o.ErrorCodes == nil {
		var ret []WrapperspbInt64Value
		return ret
	}
	return *o.ErrorCodes
}

// GetErrorCodesOk returns a tuple with the ErrorCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetErrorCodesOk() (*[]WrapperspbInt64Value, bool) {
	if o == nil || o.ErrorCodes == nil {
		return nil, false
	}
	return o.ErrorCodes, true
}

// HasErrorCodes returns a boolean if a field has been set.
func (o *V1DestinationSet) HasErrorCodes() bool {
	if o != nil && o.ErrorCodes != nil {
		return true
	}

	return false
}

// SetErrorCodes gets a reference to the given []WrapperspbInt64Value and assigns it to the ErrorCodes field.
func (o *V1DestinationSet) SetErrorCodes(v []WrapperspbInt64Value) {
	o.ErrorCodes = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1DestinationSet) GetMetadata() map[string]V1MatchString {
	if o == nil || o.Metadata == nil {
		var ret map[string]V1MatchString
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetMetadataOk() (*map[string]V1MatchString, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1DestinationSet) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]V1MatchString and assigns it to the Metadata field.
func (o *V1DestinationSet) SetMetadata(v map[string]V1MatchString) {
	o.Metadata = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *V1DestinationSet) GetMethod() V1MatchString {
	if o == nil || o.Method == nil {
		var ret V1MatchString
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetMethodOk() (*V1MatchString, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *V1DestinationSet) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given V1MatchString and assigns it to the Method field.
func (o *V1DestinationSet) SetMethod(v V1MatchString) {
	o.Method = &v
}

// GetMetricPrecision returns the MetricPrecision field value if set, zero value otherwise.
func (o *V1DestinationSet) GetMetricPrecision() int32 {
	if o == nil || o.MetricPrecision == nil {
		var ret int32
		return ret
	}
	return *o.MetricPrecision
}

// GetMetricPrecisionOk returns a tuple with the MetricPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetMetricPrecisionOk() (*int32, bool) {
	if o == nil || o.MetricPrecision == nil {
		return nil, false
	}
	return o.MetricPrecision, true
}

// HasMetricPrecision returns a boolean if a field has been set.
func (o *V1DestinationSet) HasMetricPrecision() bool {
	if o != nil && o.MetricPrecision != nil {
		return true
	}

	return false
}

// SetMetricPrecision gets a reference to the given int32 and assigns it to the MetricPrecision field.
func (o *V1DestinationSet) SetMetricPrecision(v int32) {
	o.MetricPrecision = &v
}

// GetMetricWindow returns the MetricWindow field value if set, zero value otherwise.
func (o *V1DestinationSet) GetMetricWindow() DurationpbDuration {
	if o == nil || o.MetricWindow == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.MetricWindow
}

// GetMetricWindowOk returns a tuple with the MetricWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetMetricWindowOk() (*DurationpbDuration, bool) {
	if o == nil || o.MetricWindow == nil {
		return nil, false
	}
	return o.MetricWindow, true
}

// HasMetricWindow returns a boolean if a field has been set.
func (o *V1DestinationSet) HasMetricWindow() bool {
	if o != nil && o.MetricWindow != nil {
		return true
	}

	return false
}

// SetMetricWindow gets a reference to the given DurationpbDuration and assigns it to the MetricWindow field.
func (o *V1DestinationSet) SetMetricWindow(v DurationpbDuration) {
	o.MetricWindow = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1DestinationSet) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1DestinationSet) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1DestinationSet) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *V1DestinationSet) GetPolicy() V1CbPolicy {
	if o == nil || o.Policy == nil {
		var ret V1CbPolicy
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetPolicyOk() (*V1CbPolicy, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *V1DestinationSet) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given V1CbPolicy and assigns it to the Policy field.
func (o *V1DestinationSet) SetPolicy(v V1CbPolicy) {
	o.Policy = &v
}

// GetRecover returns the Recover field value if set, zero value otherwise.
func (o *V1DestinationSet) GetRecover() V1RecoverConfig {
	if o == nil || o.Recover == nil {
		var ret V1RecoverConfig
		return ret
	}
	return *o.Recover
}

// GetRecoverOk returns a tuple with the Recover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetRecoverOk() (*V1RecoverConfig, bool) {
	if o == nil || o.Recover == nil {
		return nil, false
	}
	return o.Recover, true
}

// HasRecover returns a boolean if a field has been set.
func (o *V1DestinationSet) HasRecover() bool {
	if o != nil && o.Recover != nil {
		return true
	}

	return false
}

// SetRecover gets a reference to the given V1RecoverConfig and assigns it to the Recover field.
func (o *V1DestinationSet) SetRecover(v V1RecoverConfig) {
	o.Recover = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *V1DestinationSet) GetResource() int32 {
	if o == nil || o.Resource == nil {
		var ret int32
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetResourceOk() (*int32, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *V1DestinationSet) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given int32 and assigns it to the Resource field.
func (o *V1DestinationSet) SetResource(v int32) {
	o.Resource = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *V1DestinationSet) GetScope() int32 {
	if o == nil || o.Scope == nil {
		var ret int32
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetScopeOk() (*int32, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *V1DestinationSet) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given int32 and assigns it to the Scope field.
func (o *V1DestinationSet) SetScope(v int32) {
	o.Scope = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *V1DestinationSet) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *V1DestinationSet) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *V1DestinationSet) SetService(v string) {
	o.Service = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1DestinationSet) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1DestinationSet) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *V1DestinationSet) SetType(v int32) {
	o.Type = &v
}

// GetUpdateInterval returns the UpdateInterval field value if set, zero value otherwise.
func (o *V1DestinationSet) GetUpdateInterval() DurationpbDuration {
	if o == nil || o.UpdateInterval == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.UpdateInterval
}

// GetUpdateIntervalOk returns a tuple with the UpdateInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationSet) GetUpdateIntervalOk() (*DurationpbDuration, bool) {
	if o == nil || o.UpdateInterval == nil {
		return nil, false
	}
	return o.UpdateInterval, true
}

// HasUpdateInterval returns a boolean if a field has been set.
func (o *V1DestinationSet) HasUpdateInterval() bool {
	if o != nil && o.UpdateInterval != nil {
		return true
	}

	return false
}

// SetUpdateInterval gets a reference to the given DurationpbDuration and assigns it to the UpdateInterval field.
func (o *V1DestinationSet) SetUpdateInterval(v DurationpbDuration) {
	o.UpdateInterval = &v
}

func (o V1DestinationSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCodes != nil {
		toSerialize["errorCodes"] = o.ErrorCodes
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.MetricPrecision != nil {
		toSerialize["metricPrecision"] = o.MetricPrecision
	}
	if o.MetricWindow != nil {
		toSerialize["metricWindow"] = o.MetricWindow
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.Recover != nil {
		toSerialize["recover"] = o.Recover
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdateInterval != nil {
		toSerialize["updateInterval"] = o.UpdateInterval
	}
	return json.Marshal(toSerialize)
}

type NullableV1DestinationSet struct {
	value *V1DestinationSet
	isSet bool
}

func (v NullableV1DestinationSet) Get() *V1DestinationSet {
	return v.value
}

func (v *NullableV1DestinationSet) Set(val *V1DestinationSet) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DestinationSet) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DestinationSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DestinationSet(val *V1DestinationSet) *NullableV1DestinationSet {
	return &NullableV1DestinationSet{value: val, isSet: true}
}

func (v NullableV1DestinationSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DestinationSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


