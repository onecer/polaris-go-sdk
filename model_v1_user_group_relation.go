/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1UserGroupRelation struct for V1UserGroupRelation
type V1UserGroupRelation struct {
	GroupId *string `json:"group_id,omitempty"`
	Users *[]V1User `json:"users,omitempty"`
}

// NewV1UserGroupRelation instantiates a new V1UserGroupRelation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UserGroupRelation() *V1UserGroupRelation {
	this := V1UserGroupRelation{}
	return &this
}

// NewV1UserGroupRelationWithDefaults instantiates a new V1UserGroupRelation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UserGroupRelationWithDefaults() *V1UserGroupRelation {
	this := V1UserGroupRelation{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *V1UserGroupRelation) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UserGroupRelation) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *V1UserGroupRelation) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *V1UserGroupRelation) SetGroupId(v string) {
	o.GroupId = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *V1UserGroupRelation) GetUsers() []V1User {
	if o == nil || o.Users == nil {
		var ret []V1User
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UserGroupRelation) GetUsersOk() (*[]V1User, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *V1UserGroupRelation) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []V1User and assigns it to the Users field.
func (o *V1UserGroupRelation) SetUsers(v []V1User) {
	o.Users = &v
}

func (o V1UserGroupRelation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupId != nil {
		toSerialize["group_id"] = o.GroupId
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableV1UserGroupRelation struct {
	value *V1UserGroupRelation
	isSet bool
}

func (v NullableV1UserGroupRelation) Get() *V1UserGroupRelation {
	return v.value
}

func (v *NullableV1UserGroupRelation) Set(val *V1UserGroupRelation) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UserGroupRelation) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UserGroupRelation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UserGroupRelation(val *V1UserGroupRelation) *NullableV1UserGroupRelation {
	return &NullableV1UserGroupRelation{value: val, isSet: true}
}

func (v NullableV1UserGroupRelation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UserGroupRelation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


