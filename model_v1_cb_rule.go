/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1CbRule struct for V1CbRule
type V1CbRule struct {
	Destinations *[]V1DestinationSet `json:"destinations,omitempty"`
	Sources *[]V1SourceMatcher `json:"sources,omitempty"`
}

// NewV1CbRule instantiates a new V1CbRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1CbRule() *V1CbRule {
	this := V1CbRule{}
	return &this
}

// NewV1CbRuleWithDefaults instantiates a new V1CbRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1CbRuleWithDefaults() *V1CbRule {
	this := V1CbRule{}
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *V1CbRule) GetDestinations() []V1DestinationSet {
	if o == nil || o.Destinations == nil {
		var ret []V1DestinationSet
		return ret
	}
	return *o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CbRule) GetDestinationsOk() (*[]V1DestinationSet, bool) {
	if o == nil || o.Destinations == nil {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *V1CbRule) HasDestinations() bool {
	if o != nil && o.Destinations != nil {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []V1DestinationSet and assigns it to the Destinations field.
func (o *V1CbRule) SetDestinations(v []V1DestinationSet) {
	o.Destinations = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *V1CbRule) GetSources() []V1SourceMatcher {
	if o == nil || o.Sources == nil {
		var ret []V1SourceMatcher
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CbRule) GetSourcesOk() (*[]V1SourceMatcher, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *V1CbRule) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []V1SourceMatcher and assigns it to the Sources field.
func (o *V1CbRule) SetSources(v []V1SourceMatcher) {
	o.Sources = &v
}

func (o V1CbRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Destinations != nil {
		toSerialize["destinations"] = o.Destinations
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	return json.Marshal(toSerialize)
}

type NullableV1CbRule struct {
	value *V1CbRule
	isSet bool
}

func (v NullableV1CbRule) Get() *V1CbRule {
	return v.value
}

func (v *NullableV1CbRule) Set(val *V1CbRule) {
	v.value = val
	v.isSet = true
}

func (v NullableV1CbRule) IsSet() bool {
	return v.isSet
}

func (v *NullableV1CbRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1CbRule(val *V1CbRule) *NullableV1CbRule {
	return &NullableV1CbRule{value: val, isSet: true}
}

func (v NullableV1CbRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1CbRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


