/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ClimbConfigTriggerPolicyErrorRate struct for V1ClimbConfigTriggerPolicyErrorRate
type V1ClimbConfigTriggerPolicyErrorRate struct {
	Enable *bool `json:"enable,omitempty"`
	ErrorRate *WrapperspbInt32Value `json:"errorRate,omitempty"`
	RequestVolumeThreshold *int32 `json:"requestVolumeThreshold,omitempty"`
	Specials *[]V1ClimbConfigTriggerPolicyErrorRateSpecialConfig `json:"specials,omitempty"`
}

// NewV1ClimbConfigTriggerPolicyErrorRate instantiates a new V1ClimbConfigTriggerPolicyErrorRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ClimbConfigTriggerPolicyErrorRate() *V1ClimbConfigTriggerPolicyErrorRate {
	this := V1ClimbConfigTriggerPolicyErrorRate{}
	return &this
}

// NewV1ClimbConfigTriggerPolicyErrorRateWithDefaults instantiates a new V1ClimbConfigTriggerPolicyErrorRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ClimbConfigTriggerPolicyErrorRateWithDefaults() *V1ClimbConfigTriggerPolicyErrorRate {
	this := V1ClimbConfigTriggerPolicyErrorRate{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *V1ClimbConfigTriggerPolicyErrorRate) SetEnable(v bool) {
	o.Enable = &v
}

// GetErrorRate returns the ErrorRate field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetErrorRate() WrapperspbInt32Value {
	if o == nil || o.ErrorRate == nil {
		var ret WrapperspbInt32Value
		return ret
	}
	return *o.ErrorRate
}

// GetErrorRateOk returns a tuple with the ErrorRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetErrorRateOk() (*WrapperspbInt32Value, bool) {
	if o == nil || o.ErrorRate == nil {
		return nil, false
	}
	return o.ErrorRate, true
}

// HasErrorRate returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) HasErrorRate() bool {
	if o != nil && o.ErrorRate != nil {
		return true
	}

	return false
}

// SetErrorRate gets a reference to the given WrapperspbInt32Value and assigns it to the ErrorRate field.
func (o *V1ClimbConfigTriggerPolicyErrorRate) SetErrorRate(v WrapperspbInt32Value) {
	o.ErrorRate = &v
}

// GetRequestVolumeThreshold returns the RequestVolumeThreshold field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetRequestVolumeThreshold() int32 {
	if o == nil || o.RequestVolumeThreshold == nil {
		var ret int32
		return ret
	}
	return *o.RequestVolumeThreshold
}

// GetRequestVolumeThresholdOk returns a tuple with the RequestVolumeThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetRequestVolumeThresholdOk() (*int32, bool) {
	if o == nil || o.RequestVolumeThreshold == nil {
		return nil, false
	}
	return o.RequestVolumeThreshold, true
}

// HasRequestVolumeThreshold returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) HasRequestVolumeThreshold() bool {
	if o != nil && o.RequestVolumeThreshold != nil {
		return true
	}

	return false
}

// SetRequestVolumeThreshold gets a reference to the given int32 and assigns it to the RequestVolumeThreshold field.
func (o *V1ClimbConfigTriggerPolicyErrorRate) SetRequestVolumeThreshold(v int32) {
	o.RequestVolumeThreshold = &v
}

// GetSpecials returns the Specials field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetSpecials() []V1ClimbConfigTriggerPolicyErrorRateSpecialConfig {
	if o == nil || o.Specials == nil {
		var ret []V1ClimbConfigTriggerPolicyErrorRateSpecialConfig
		return ret
	}
	return *o.Specials
}

// GetSpecialsOk returns a tuple with the Specials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) GetSpecialsOk() (*[]V1ClimbConfigTriggerPolicyErrorRateSpecialConfig, bool) {
	if o == nil || o.Specials == nil {
		return nil, false
	}
	return o.Specials, true
}

// HasSpecials returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRate) HasSpecials() bool {
	if o != nil && o.Specials != nil {
		return true
	}

	return false
}

// SetSpecials gets a reference to the given []V1ClimbConfigTriggerPolicyErrorRateSpecialConfig and assigns it to the Specials field.
func (o *V1ClimbConfigTriggerPolicyErrorRate) SetSpecials(v []V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) {
	o.Specials = &v
}

func (o V1ClimbConfigTriggerPolicyErrorRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	if o.ErrorRate != nil {
		toSerialize["errorRate"] = o.ErrorRate
	}
	if o.RequestVolumeThreshold != nil {
		toSerialize["requestVolumeThreshold"] = o.RequestVolumeThreshold
	}
	if o.Specials != nil {
		toSerialize["specials"] = o.Specials
	}
	return json.Marshal(toSerialize)
}

type NullableV1ClimbConfigTriggerPolicyErrorRate struct {
	value *V1ClimbConfigTriggerPolicyErrorRate
	isSet bool
}

func (v NullableV1ClimbConfigTriggerPolicyErrorRate) Get() *V1ClimbConfigTriggerPolicyErrorRate {
	return v.value
}

func (v *NullableV1ClimbConfigTriggerPolicyErrorRate) Set(val *V1ClimbConfigTriggerPolicyErrorRate) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ClimbConfigTriggerPolicyErrorRate) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ClimbConfigTriggerPolicyErrorRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ClimbConfigTriggerPolicyErrorRate(val *V1ClimbConfigTriggerPolicyErrorRate) *NullableV1ClimbConfigTriggerPolicyErrorRate {
	return &NullableV1ClimbConfigTriggerPolicyErrorRate{value: val, isSet: true}
}

func (v NullableV1ClimbConfigTriggerPolicyErrorRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ClimbConfigTriggerPolicyErrorRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


