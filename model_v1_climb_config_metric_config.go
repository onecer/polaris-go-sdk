/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ClimbConfigMetricConfig struct for V1ClimbConfigMetricConfig
type V1ClimbConfigMetricConfig struct {
	Precision *int32 `json:"precision,omitempty"`
	ReportInterval *DurationpbDuration `json:"reportInterval,omitempty"`
	Window *DurationpbDuration `json:"window,omitempty"`
}

// NewV1ClimbConfigMetricConfig instantiates a new V1ClimbConfigMetricConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ClimbConfigMetricConfig() *V1ClimbConfigMetricConfig {
	this := V1ClimbConfigMetricConfig{}
	return &this
}

// NewV1ClimbConfigMetricConfigWithDefaults instantiates a new V1ClimbConfigMetricConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ClimbConfigMetricConfigWithDefaults() *V1ClimbConfigMetricConfig {
	this := V1ClimbConfigMetricConfig{}
	return &this
}

// GetPrecision returns the Precision field value if set, zero value otherwise.
func (o *V1ClimbConfigMetricConfig) GetPrecision() int32 {
	if o == nil || o.Precision == nil {
		var ret int32
		return ret
	}
	return *o.Precision
}

// GetPrecisionOk returns a tuple with the Precision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigMetricConfig) GetPrecisionOk() (*int32, bool) {
	if o == nil || o.Precision == nil {
		return nil, false
	}
	return o.Precision, true
}

// HasPrecision returns a boolean if a field has been set.
func (o *V1ClimbConfigMetricConfig) HasPrecision() bool {
	if o != nil && o.Precision != nil {
		return true
	}

	return false
}

// SetPrecision gets a reference to the given int32 and assigns it to the Precision field.
func (o *V1ClimbConfigMetricConfig) SetPrecision(v int32) {
	o.Precision = &v
}

// GetReportInterval returns the ReportInterval field value if set, zero value otherwise.
func (o *V1ClimbConfigMetricConfig) GetReportInterval() DurationpbDuration {
	if o == nil || o.ReportInterval == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.ReportInterval
}

// GetReportIntervalOk returns a tuple with the ReportInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigMetricConfig) GetReportIntervalOk() (*DurationpbDuration, bool) {
	if o == nil || o.ReportInterval == nil {
		return nil, false
	}
	return o.ReportInterval, true
}

// HasReportInterval returns a boolean if a field has been set.
func (o *V1ClimbConfigMetricConfig) HasReportInterval() bool {
	if o != nil && o.ReportInterval != nil {
		return true
	}

	return false
}

// SetReportInterval gets a reference to the given DurationpbDuration and assigns it to the ReportInterval field.
func (o *V1ClimbConfigMetricConfig) SetReportInterval(v DurationpbDuration) {
	o.ReportInterval = &v
}

// GetWindow returns the Window field value if set, zero value otherwise.
func (o *V1ClimbConfigMetricConfig) GetWindow() DurationpbDuration {
	if o == nil || o.Window == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.Window
}

// GetWindowOk returns a tuple with the Window field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigMetricConfig) GetWindowOk() (*DurationpbDuration, bool) {
	if o == nil || o.Window == nil {
		return nil, false
	}
	return o.Window, true
}

// HasWindow returns a boolean if a field has been set.
func (o *V1ClimbConfigMetricConfig) HasWindow() bool {
	if o != nil && o.Window != nil {
		return true
	}

	return false
}

// SetWindow gets a reference to the given DurationpbDuration and assigns it to the Window field.
func (o *V1ClimbConfigMetricConfig) SetWindow(v DurationpbDuration) {
	o.Window = &v
}

func (o V1ClimbConfigMetricConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Precision != nil {
		toSerialize["precision"] = o.Precision
	}
	if o.ReportInterval != nil {
		toSerialize["reportInterval"] = o.ReportInterval
	}
	if o.Window != nil {
		toSerialize["window"] = o.Window
	}
	return json.Marshal(toSerialize)
}

type NullableV1ClimbConfigMetricConfig struct {
	value *V1ClimbConfigMetricConfig
	isSet bool
}

func (v NullableV1ClimbConfigMetricConfig) Get() *V1ClimbConfigMetricConfig {
	return v.value
}

func (v *NullableV1ClimbConfigMetricConfig) Set(val *V1ClimbConfigMetricConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ClimbConfigMetricConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ClimbConfigMetricConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ClimbConfigMetricConfig(val *V1ClimbConfigMetricConfig) *NullableV1ClimbConfigMetricConfig {
	return &NullableV1ClimbConfigMetricConfig{value: val, isSet: true}
}

func (v NullableV1ClimbConfigMetricConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ClimbConfigMetricConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


