/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1RecoverConfig struct for V1RecoverConfig
type V1RecoverConfig struct {
	MaxRetryAfterHalfOpen *int32 `json:"maxRetryAfterHalfOpen,omitempty"`
	OutlierDetectWhen *int32 `json:"outlierDetectWhen,omitempty"`
	RequestCountAfterHalfOpen *int32 `json:"requestCountAfterHalfOpen,omitempty"`
	RequestRateAfterHalfOpen *[]int32 `json:"requestRateAfterHalfOpen,omitempty"`
	SleepWindow *DurationpbDuration `json:"sleepWindow,omitempty"`
	SuccessRateToClose *int32 `json:"successRateToClose,omitempty"`
}

// NewV1RecoverConfig instantiates a new V1RecoverConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RecoverConfig() *V1RecoverConfig {
	this := V1RecoverConfig{}
	return &this
}

// NewV1RecoverConfigWithDefaults instantiates a new V1RecoverConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RecoverConfigWithDefaults() *V1RecoverConfig {
	this := V1RecoverConfig{}
	return &this
}

// GetMaxRetryAfterHalfOpen returns the MaxRetryAfterHalfOpen field value if set, zero value otherwise.
func (o *V1RecoverConfig) GetMaxRetryAfterHalfOpen() int32 {
	if o == nil || o.MaxRetryAfterHalfOpen == nil {
		var ret int32
		return ret
	}
	return *o.MaxRetryAfterHalfOpen
}

// GetMaxRetryAfterHalfOpenOk returns a tuple with the MaxRetryAfterHalfOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RecoverConfig) GetMaxRetryAfterHalfOpenOk() (*int32, bool) {
	if o == nil || o.MaxRetryAfterHalfOpen == nil {
		return nil, false
	}
	return o.MaxRetryAfterHalfOpen, true
}

// HasMaxRetryAfterHalfOpen returns a boolean if a field has been set.
func (o *V1RecoverConfig) HasMaxRetryAfterHalfOpen() bool {
	if o != nil && o.MaxRetryAfterHalfOpen != nil {
		return true
	}

	return false
}

// SetMaxRetryAfterHalfOpen gets a reference to the given int32 and assigns it to the MaxRetryAfterHalfOpen field.
func (o *V1RecoverConfig) SetMaxRetryAfterHalfOpen(v int32) {
	o.MaxRetryAfterHalfOpen = &v
}

// GetOutlierDetectWhen returns the OutlierDetectWhen field value if set, zero value otherwise.
func (o *V1RecoverConfig) GetOutlierDetectWhen() int32 {
	if o == nil || o.OutlierDetectWhen == nil {
		var ret int32
		return ret
	}
	return *o.OutlierDetectWhen
}

// GetOutlierDetectWhenOk returns a tuple with the OutlierDetectWhen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RecoverConfig) GetOutlierDetectWhenOk() (*int32, bool) {
	if o == nil || o.OutlierDetectWhen == nil {
		return nil, false
	}
	return o.OutlierDetectWhen, true
}

// HasOutlierDetectWhen returns a boolean if a field has been set.
func (o *V1RecoverConfig) HasOutlierDetectWhen() bool {
	if o != nil && o.OutlierDetectWhen != nil {
		return true
	}

	return false
}

// SetOutlierDetectWhen gets a reference to the given int32 and assigns it to the OutlierDetectWhen field.
func (o *V1RecoverConfig) SetOutlierDetectWhen(v int32) {
	o.OutlierDetectWhen = &v
}

// GetRequestCountAfterHalfOpen returns the RequestCountAfterHalfOpen field value if set, zero value otherwise.
func (o *V1RecoverConfig) GetRequestCountAfterHalfOpen() int32 {
	if o == nil || o.RequestCountAfterHalfOpen == nil {
		var ret int32
		return ret
	}
	return *o.RequestCountAfterHalfOpen
}

// GetRequestCountAfterHalfOpenOk returns a tuple with the RequestCountAfterHalfOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RecoverConfig) GetRequestCountAfterHalfOpenOk() (*int32, bool) {
	if o == nil || o.RequestCountAfterHalfOpen == nil {
		return nil, false
	}
	return o.RequestCountAfterHalfOpen, true
}

// HasRequestCountAfterHalfOpen returns a boolean if a field has been set.
func (o *V1RecoverConfig) HasRequestCountAfterHalfOpen() bool {
	if o != nil && o.RequestCountAfterHalfOpen != nil {
		return true
	}

	return false
}

// SetRequestCountAfterHalfOpen gets a reference to the given int32 and assigns it to the RequestCountAfterHalfOpen field.
func (o *V1RecoverConfig) SetRequestCountAfterHalfOpen(v int32) {
	o.RequestCountAfterHalfOpen = &v
}

// GetRequestRateAfterHalfOpen returns the RequestRateAfterHalfOpen field value if set, zero value otherwise.
func (o *V1RecoverConfig) GetRequestRateAfterHalfOpen() []int32 {
	if o == nil || o.RequestRateAfterHalfOpen == nil {
		var ret []int32
		return ret
	}
	return *o.RequestRateAfterHalfOpen
}

// GetRequestRateAfterHalfOpenOk returns a tuple with the RequestRateAfterHalfOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RecoverConfig) GetRequestRateAfterHalfOpenOk() (*[]int32, bool) {
	if o == nil || o.RequestRateAfterHalfOpen == nil {
		return nil, false
	}
	return o.RequestRateAfterHalfOpen, true
}

// HasRequestRateAfterHalfOpen returns a boolean if a field has been set.
func (o *V1RecoverConfig) HasRequestRateAfterHalfOpen() bool {
	if o != nil && o.RequestRateAfterHalfOpen != nil {
		return true
	}

	return false
}

// SetRequestRateAfterHalfOpen gets a reference to the given []int32 and assigns it to the RequestRateAfterHalfOpen field.
func (o *V1RecoverConfig) SetRequestRateAfterHalfOpen(v []int32) {
	o.RequestRateAfterHalfOpen = &v
}

// GetSleepWindow returns the SleepWindow field value if set, zero value otherwise.
func (o *V1RecoverConfig) GetSleepWindow() DurationpbDuration {
	if o == nil || o.SleepWindow == nil {
		var ret DurationpbDuration
		return ret
	}
	return *o.SleepWindow
}

// GetSleepWindowOk returns a tuple with the SleepWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RecoverConfig) GetSleepWindowOk() (*DurationpbDuration, bool) {
	if o == nil || o.SleepWindow == nil {
		return nil, false
	}
	return o.SleepWindow, true
}

// HasSleepWindow returns a boolean if a field has been set.
func (o *V1RecoverConfig) HasSleepWindow() bool {
	if o != nil && o.SleepWindow != nil {
		return true
	}

	return false
}

// SetSleepWindow gets a reference to the given DurationpbDuration and assigns it to the SleepWindow field.
func (o *V1RecoverConfig) SetSleepWindow(v DurationpbDuration) {
	o.SleepWindow = &v
}

// GetSuccessRateToClose returns the SuccessRateToClose field value if set, zero value otherwise.
func (o *V1RecoverConfig) GetSuccessRateToClose() int32 {
	if o == nil || o.SuccessRateToClose == nil {
		var ret int32
		return ret
	}
	return *o.SuccessRateToClose
}

// GetSuccessRateToCloseOk returns a tuple with the SuccessRateToClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RecoverConfig) GetSuccessRateToCloseOk() (*int32, bool) {
	if o == nil || o.SuccessRateToClose == nil {
		return nil, false
	}
	return o.SuccessRateToClose, true
}

// HasSuccessRateToClose returns a boolean if a field has been set.
func (o *V1RecoverConfig) HasSuccessRateToClose() bool {
	if o != nil && o.SuccessRateToClose != nil {
		return true
	}

	return false
}

// SetSuccessRateToClose gets a reference to the given int32 and assigns it to the SuccessRateToClose field.
func (o *V1RecoverConfig) SetSuccessRateToClose(v int32) {
	o.SuccessRateToClose = &v
}

func (o V1RecoverConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxRetryAfterHalfOpen != nil {
		toSerialize["maxRetryAfterHalfOpen"] = o.MaxRetryAfterHalfOpen
	}
	if o.OutlierDetectWhen != nil {
		toSerialize["outlierDetectWhen"] = o.OutlierDetectWhen
	}
	if o.RequestCountAfterHalfOpen != nil {
		toSerialize["requestCountAfterHalfOpen"] = o.RequestCountAfterHalfOpen
	}
	if o.RequestRateAfterHalfOpen != nil {
		toSerialize["requestRateAfterHalfOpen"] = o.RequestRateAfterHalfOpen
	}
	if o.SleepWindow != nil {
		toSerialize["sleepWindow"] = o.SleepWindow
	}
	if o.SuccessRateToClose != nil {
		toSerialize["successRateToClose"] = o.SuccessRateToClose
	}
	return json.Marshal(toSerialize)
}

type NullableV1RecoverConfig struct {
	value *V1RecoverConfig
	isSet bool
}

func (v NullableV1RecoverConfig) Get() *V1RecoverConfig {
	return v.value
}

func (v *NullableV1RecoverConfig) Set(val *V1RecoverConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RecoverConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RecoverConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RecoverConfig(val *V1RecoverConfig) *NullableV1RecoverConfig {
	return &NullableV1RecoverConfig{value: val, isSet: true}
}

func (v NullableV1RecoverConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RecoverConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


