/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V2Routing struct for V2Routing
type V2Routing struct {
	Ctime *string `json:"ctime,omitempty"`
	Description *string `json:"description,omitempty"`
	Enable *bool `json:"enable,omitempty"`
	Etime *string `json:"etime,omitempty"`
	ExtendInfo *map[string]string `json:"extendInfo,omitempty"`
	Id *string `json:"id,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	Revision *string `json:"revision,omitempty"`
	RoutingConfig *AnypbAny `json:"routing_config,omitempty"`
	RoutingPolicy *int32 `json:"routing_policy,omitempty"`
}

// NewV2Routing instantiates a new V2Routing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2Routing() *V2Routing {
	this := V2Routing{}
	return &this
}

// NewV2RoutingWithDefaults instantiates a new V2Routing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2RoutingWithDefaults() *V2Routing {
	this := V2Routing{}
	return &this
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *V2Routing) GetCtime() string {
	if o == nil || o.Ctime == nil {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetCtimeOk() (*string, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *V2Routing) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *V2Routing) SetCtime(v string) {
	o.Ctime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V2Routing) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V2Routing) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V2Routing) SetDescription(v string) {
	o.Description = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *V2Routing) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *V2Routing) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *V2Routing) SetEnable(v bool) {
	o.Enable = &v
}

// GetEtime returns the Etime field value if set, zero value otherwise.
func (o *V2Routing) GetEtime() string {
	if o == nil || o.Etime == nil {
		var ret string
		return ret
	}
	return *o.Etime
}

// GetEtimeOk returns a tuple with the Etime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetEtimeOk() (*string, bool) {
	if o == nil || o.Etime == nil {
		return nil, false
	}
	return o.Etime, true
}

// HasEtime returns a boolean if a field has been set.
func (o *V2Routing) HasEtime() bool {
	if o != nil && o.Etime != nil {
		return true
	}

	return false
}

// SetEtime gets a reference to the given string and assigns it to the Etime field.
func (o *V2Routing) SetEtime(v string) {
	o.Etime = &v
}

// GetExtendInfo returns the ExtendInfo field value if set, zero value otherwise.
func (o *V2Routing) GetExtendInfo() map[string]string {
	if o == nil || o.ExtendInfo == nil {
		var ret map[string]string
		return ret
	}
	return *o.ExtendInfo
}

// GetExtendInfoOk returns a tuple with the ExtendInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetExtendInfoOk() (*map[string]string, bool) {
	if o == nil || o.ExtendInfo == nil {
		return nil, false
	}
	return o.ExtendInfo, true
}

// HasExtendInfo returns a boolean if a field has been set.
func (o *V2Routing) HasExtendInfo() bool {
	if o != nil && o.ExtendInfo != nil {
		return true
	}

	return false
}

// SetExtendInfo gets a reference to the given map[string]string and assigns it to the ExtendInfo field.
func (o *V2Routing) SetExtendInfo(v map[string]string) {
	o.ExtendInfo = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V2Routing) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V2Routing) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V2Routing) SetId(v string) {
	o.Id = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *V2Routing) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *V2Routing) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *V2Routing) SetMtime(v string) {
	o.Mtime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2Routing) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2Routing) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2Routing) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V2Routing) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V2Routing) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V2Routing) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V2Routing) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V2Routing) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *V2Routing) SetPriority(v int32) {
	o.Priority = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V2Routing) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V2Routing) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *V2Routing) SetRevision(v string) {
	o.Revision = &v
}

// GetRoutingConfig returns the RoutingConfig field value if set, zero value otherwise.
func (o *V2Routing) GetRoutingConfig() AnypbAny {
	if o == nil || o.RoutingConfig == nil {
		var ret AnypbAny
		return ret
	}
	return *o.RoutingConfig
}

// GetRoutingConfigOk returns a tuple with the RoutingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetRoutingConfigOk() (*AnypbAny, bool) {
	if o == nil || o.RoutingConfig == nil {
		return nil, false
	}
	return o.RoutingConfig, true
}

// HasRoutingConfig returns a boolean if a field has been set.
func (o *V2Routing) HasRoutingConfig() bool {
	if o != nil && o.RoutingConfig != nil {
		return true
	}

	return false
}

// SetRoutingConfig gets a reference to the given AnypbAny and assigns it to the RoutingConfig field.
func (o *V2Routing) SetRoutingConfig(v AnypbAny) {
	o.RoutingConfig = &v
}

// GetRoutingPolicy returns the RoutingPolicy field value if set, zero value otherwise.
func (o *V2Routing) GetRoutingPolicy() int32 {
	if o == nil || o.RoutingPolicy == nil {
		var ret int32
		return ret
	}
	return *o.RoutingPolicy
}

// GetRoutingPolicyOk returns a tuple with the RoutingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Routing) GetRoutingPolicyOk() (*int32, bool) {
	if o == nil || o.RoutingPolicy == nil {
		return nil, false
	}
	return o.RoutingPolicy, true
}

// HasRoutingPolicy returns a boolean if a field has been set.
func (o *V2Routing) HasRoutingPolicy() bool {
	if o != nil && o.RoutingPolicy != nil {
		return true
	}

	return false
}

// SetRoutingPolicy gets a reference to the given int32 and assigns it to the RoutingPolicy field.
func (o *V2Routing) SetRoutingPolicy(v int32) {
	o.RoutingPolicy = &v
}

func (o V2Routing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	if o.Etime != nil {
		toSerialize["etime"] = o.Etime
	}
	if o.ExtendInfo != nil {
		toSerialize["extendInfo"] = o.ExtendInfo
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.RoutingConfig != nil {
		toSerialize["routing_config"] = o.RoutingConfig
	}
	if o.RoutingPolicy != nil {
		toSerialize["routing_policy"] = o.RoutingPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableV2Routing struct {
	value *V2Routing
	isSet bool
}

func (v NullableV2Routing) Get() *V2Routing {
	return v.value
}

func (v *NullableV2Routing) Set(val *V2Routing) {
	v.value = val
	v.isSet = true
}

func (v NullableV2Routing) IsSet() bool {
	return v.isSet
}

func (v *NullableV2Routing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2Routing(val *V2Routing) *NullableV2Routing {
	return &NullableV2Routing{value: val, isSet: true}
}

func (v NullableV2Routing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2Routing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


