/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1Routing struct for V1Routing
type V1Routing struct {
	Ctime *string `json:"ctime,omitempty"`
	Inbounds *[]V1Route `json:"inbounds,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Outbounds *[]V1Route `json:"outbounds,omitempty"`
	Revision *string `json:"revision,omitempty"`
	Service *string `json:"service,omitempty"`
	ServiceToken *string `json:"service_token,omitempty"`
}

// NewV1Routing instantiates a new V1Routing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Routing() *V1Routing {
	this := V1Routing{}
	return &this
}

// NewV1RoutingWithDefaults instantiates a new V1Routing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RoutingWithDefaults() *V1Routing {
	this := V1Routing{}
	return &this
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *V1Routing) GetCtime() string {
	if o == nil || o.Ctime == nil {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetCtimeOk() (*string, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *V1Routing) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *V1Routing) SetCtime(v string) {
	o.Ctime = &v
}

// GetInbounds returns the Inbounds field value if set, zero value otherwise.
func (o *V1Routing) GetInbounds() []V1Route {
	if o == nil || o.Inbounds == nil {
		var ret []V1Route
		return ret
	}
	return *o.Inbounds
}

// GetInboundsOk returns a tuple with the Inbounds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetInboundsOk() (*[]V1Route, bool) {
	if o == nil || o.Inbounds == nil {
		return nil, false
	}
	return o.Inbounds, true
}

// HasInbounds returns a boolean if a field has been set.
func (o *V1Routing) HasInbounds() bool {
	if o != nil && o.Inbounds != nil {
		return true
	}

	return false
}

// SetInbounds gets a reference to the given []V1Route and assigns it to the Inbounds field.
func (o *V1Routing) SetInbounds(v []V1Route) {
	o.Inbounds = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *V1Routing) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *V1Routing) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *V1Routing) SetMtime(v string) {
	o.Mtime = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1Routing) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1Routing) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1Routing) SetNamespace(v string) {
	o.Namespace = &v
}

// GetOutbounds returns the Outbounds field value if set, zero value otherwise.
func (o *V1Routing) GetOutbounds() []V1Route {
	if o == nil || o.Outbounds == nil {
		var ret []V1Route
		return ret
	}
	return *o.Outbounds
}

// GetOutboundsOk returns a tuple with the Outbounds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetOutboundsOk() (*[]V1Route, bool) {
	if o == nil || o.Outbounds == nil {
		return nil, false
	}
	return o.Outbounds, true
}

// HasOutbounds returns a boolean if a field has been set.
func (o *V1Routing) HasOutbounds() bool {
	if o != nil && o.Outbounds != nil {
		return true
	}

	return false
}

// SetOutbounds gets a reference to the given []V1Route and assigns it to the Outbounds field.
func (o *V1Routing) SetOutbounds(v []V1Route) {
	o.Outbounds = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1Routing) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1Routing) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *V1Routing) SetRevision(v string) {
	o.Revision = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *V1Routing) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *V1Routing) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *V1Routing) SetService(v string) {
	o.Service = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *V1Routing) GetServiceToken() string {
	if o == nil || o.ServiceToken == nil {
		var ret string
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Routing) GetServiceTokenOk() (*string, bool) {
	if o == nil || o.ServiceToken == nil {
		return nil, false
	}
	return o.ServiceToken, true
}

// HasServiceToken returns a boolean if a field has been set.
func (o *V1Routing) HasServiceToken() bool {
	if o != nil && o.ServiceToken != nil {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given string and assigns it to the ServiceToken field.
func (o *V1Routing) SetServiceToken(v string) {
	o.ServiceToken = &v
}

func (o V1Routing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.Inbounds != nil {
		toSerialize["inbounds"] = o.Inbounds
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Outbounds != nil {
		toSerialize["outbounds"] = o.Outbounds
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.ServiceToken != nil {
		toSerialize["service_token"] = o.ServiceToken
	}
	return json.Marshal(toSerialize)
}

type NullableV1Routing struct {
	value *V1Routing
	isSet bool
}

func (v NullableV1Routing) Get() *V1Routing {
	return v.value
}

func (v *NullableV1Routing) Set(val *V1Routing) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Routing) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Routing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Routing(val *V1Routing) *NullableV1Routing {
	return &NullableV1Routing{value: val, isSet: true}
}

func (v NullableV1Routing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Routing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


