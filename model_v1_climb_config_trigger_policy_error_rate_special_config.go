/*
Polaris Server

一个支持多语言、多框架的云原生服务发现和治理中心  提供高性能SDK和无侵入Sidecar两种接入方式  

API version: v0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polaris

import (
	"encoding/json"
)

// V1ClimbConfigTriggerPolicyErrorRateSpecialConfig struct for V1ClimbConfigTriggerPolicyErrorRateSpecialConfig
type V1ClimbConfigTriggerPolicyErrorRateSpecialConfig struct {
	ErrorCodes *[]WrapperspbInt64Value `json:"errorCodes,omitempty"`
	ErrorRate *WrapperspbInt32Value `json:"errorRate,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1ClimbConfigTriggerPolicyErrorRateSpecialConfig instantiates a new V1ClimbConfigTriggerPolicyErrorRateSpecialConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ClimbConfigTriggerPolicyErrorRateSpecialConfig() *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig {
	this := V1ClimbConfigTriggerPolicyErrorRateSpecialConfig{}
	return &this
}

// NewV1ClimbConfigTriggerPolicyErrorRateSpecialConfigWithDefaults instantiates a new V1ClimbConfigTriggerPolicyErrorRateSpecialConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ClimbConfigTriggerPolicyErrorRateSpecialConfigWithDefaults() *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig {
	this := V1ClimbConfigTriggerPolicyErrorRateSpecialConfig{}
	return &this
}

// GetErrorCodes returns the ErrorCodes field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) GetErrorCodes() []WrapperspbInt64Value {
	if o == nil || o.ErrorCodes == nil {
		var ret []WrapperspbInt64Value
		return ret
	}
	return *o.ErrorCodes
}

// GetErrorCodesOk returns a tuple with the ErrorCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) GetErrorCodesOk() (*[]WrapperspbInt64Value, bool) {
	if o == nil || o.ErrorCodes == nil {
		return nil, false
	}
	return o.ErrorCodes, true
}

// HasErrorCodes returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) HasErrorCodes() bool {
	if o != nil && o.ErrorCodes != nil {
		return true
	}

	return false
}

// SetErrorCodes gets a reference to the given []WrapperspbInt64Value and assigns it to the ErrorCodes field.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) SetErrorCodes(v []WrapperspbInt64Value) {
	o.ErrorCodes = &v
}

// GetErrorRate returns the ErrorRate field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) GetErrorRate() WrapperspbInt32Value {
	if o == nil || o.ErrorRate == nil {
		var ret WrapperspbInt32Value
		return ret
	}
	return *o.ErrorRate
}

// GetErrorRateOk returns a tuple with the ErrorRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) GetErrorRateOk() (*WrapperspbInt32Value, bool) {
	if o == nil || o.ErrorRate == nil {
		return nil, false
	}
	return o.ErrorRate, true
}

// HasErrorRate returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) HasErrorRate() bool {
	if o != nil && o.ErrorRate != nil {
		return true
	}

	return false
}

// SetErrorRate gets a reference to the given WrapperspbInt32Value and assigns it to the ErrorRate field.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) SetErrorRate(v WrapperspbInt32Value) {
	o.ErrorRate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) SetType(v string) {
	o.Type = &v
}

func (o V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCodes != nil {
		toSerialize["errorCodes"] = o.ErrorCodes
	}
	if o.ErrorRate != nil {
		toSerialize["errorRate"] = o.ErrorRate
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig struct {
	value *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig
	isSet bool
}

func (v NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig) Get() *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig {
	return v.value
}

func (v *NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig) Set(val *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig(val *V1ClimbConfigTriggerPolicyErrorRateSpecialConfig) *NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig {
	return &NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig{value: val, isSet: true}
}

func (v NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ClimbConfigTriggerPolicyErrorRateSpecialConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


